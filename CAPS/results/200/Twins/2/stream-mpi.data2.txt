-------------------------------------------------------------
STREAM version $Revision: 1.8 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Total Aggregate Array size = 2000000000 (elements)
Total Aggregate Memory per array = 15258.8 MiB (= 14.9 GiB).
Total Aggregate memory required = 45776.4 MiB (= 44.7 GiB).
Data is distributed across 4 MPI ranks
   Array size per MPI rank = 500000000 (elements)
   Memory per array per MPI rank = 3814.7 MiB (= 3.7 GiB).
   Total memory per MPI rank = 11444.1 MiB (= 11.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 450 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
The SCALAR value used for this run is 0.420000
-------------------------------------------------------------
Number of Threads requested for each MPI rank = 12
Number of Threads counted for rank 0 = 12
-------------------------------------------------------------
Your timer granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 88438 microseconds.
   (= 88438 timer ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 timer ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:         374007.2     0.152679     0.085560     0.239940
Scale:        249029.1     0.323243     0.128499     0.434986
Add:          210940.6     0.408733     0.227552     0.532750
Triad:        212784.8     0.415187     0.225580     0.532363
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
