-------------------------------------------------------------
STREAM version $Revision: 1.8 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Total Aggregate Array size = 2000000000 (elements)
Total Aggregate Memory per array = 15258.8 MiB (= 14.9 GiB).
Total Aggregate memory required = 45776.4 MiB (= 44.7 GiB).
Data is distributed across 4 MPI ranks
   Array size per MPI rank = 500000000 (elements)
   Memory per array per MPI rank = 3814.7 MiB (= 3.7 GiB).
   Total memory per MPI rank = 11444.1 MiB (= 11.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 450 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
The SCALAR value used for this run is 0.420000
-------------------------------------------------------------
Number of Threads requested for each MPI rank = 24
Number of Threads counted for rank 0 = 24
-------------------------------------------------------------
Your timer granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 78438 microseconds.
   (= 78438 timer ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 timer ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:         415266.1     0.101724     0.077059     0.557814
Scale:        308026.8     0.130324     0.103887     0.500938
Add:          350629.0     0.168041     0.136897     0.571679
Triad:        350810.4     0.166979     0.136826     0.518845
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
